import { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import './FeaturedCourses.css';

// Import Swiper React components
import { Swiper, SwiperSlide } from 'swiper/react';

// Import Swiper styles
import 'swiper/css';
import 'swiper/css/pagination';
import 'swiper/css/navigation';
import 'swiper/css/effect-cards';

// Import required modules
import { Pagination, Navigation, Autoplay, EffectCoverflow } from 'swiper/modules';

// Mock data for featured courses
const mockCourses = [
  {
    id: 1,
    title: 'JavaScript T·ª´ C∆° B·∫£n ƒê·∫øn N√¢ng Cao',
    description: 'H·ªçc JavaScript t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao, bao g·ªìm ES6+, DOM manipulation v√† c√°c k·ªπ thu·∫≠t hi·ªán ƒë·∫°i.',
    image: '/js-course.jpg',
    icon: 'üü®',
    language: 'JavaScript',
    color: '#F7DF1E',
    level: 'C∆° b·∫£n ƒë·∫øn N√¢ng cao',
    duration: '40 gi·ªù',
    price: 'Mi·ªÖn ph√≠',
    instructor: 'Nguy·ªÖn VƒÉn A',
    rating: 4.9
  },
  {
    id: 2,
    title: 'React - X√¢y D·ª±ng Giao Di·ªán Modern',
    description: 'H·ªçc React t·ª´ ƒë·∫ßu v√† x√¢y d·ª±ng c√°c ·ª©ng d·ª•ng web hi·ªán ƒë·∫°i v·ªõi React Hooks v√† Redux.',
    image: '/react-course.jpg',
    icon: '‚öõÔ∏è',
    language: 'React',
    color: '#61DAFB',
    level: 'Trung c·∫•p',
    duration: '35 gi·ªù',
    price: 'Mi·ªÖn ph√≠',
    instructor: 'Tr·∫ßn Th·ªã B',
    rating: 4.8
  },
  {
    id: 3,
    title: 'Node.js & Express - API Development',
    description: 'X√¢y d·ª±ng REST API v·ªõi Node.js, Express v√† MongoDB ƒë·ªÉ ph√°t tri·ªÉn backend cho web apps.',
    image: '/node-course.jpg',
    icon: 'üü©',
    language: 'Node.js',
    color: '#339933',
    level: 'Trung c·∫•p ƒë·∫øn N√¢ng cao',
    duration: '30 gi·ªù',
    price: 'Mi·ªÖn ph√≠',
    instructor: 'L√™ VƒÉn C',
    rating: 4.7
  },
  {
    id: 4,
    title: 'Python cho Data Science',
    description: 'H·ªçc Python v√† c√°c th∆∞ vi·ªán ph√¢n t√≠ch d·ªØ li·ªáu nh∆∞ Pandas, NumPy v√† Matplotlib.',
    image: '/default-course.jpg',
    icon: 'üêç',
    language: 'Python',
    color: '#3776AB',
    level: 'C∆° b·∫£n ƒë·∫øn N√¢ng cao',
    duration: '45 gi·ªù',
    price: 'Mi·ªÖn ph√≠',
    instructor: 'Ph·∫°m Th·ªã D',
    rating: 4.6
  },
  {
    id: 5,
    title: 'Flutter - Ph√°t tri·ªÉn ·ª©ng d·ª•ng di ƒë·ªông',
    description: 'X√¢y d·ª±ng ·ª©ng d·ª•ng di ƒë·ªông ƒëa n·ªÅn t·∫£ng v·ªõi Flutter v√† Dart.',
    image: '/default-course.jpg',
    icon: 'üì±',
    language: 'Flutter',
    color: '#02569B',
    level: 'Trung c·∫•p',
    duration: '38 gi·ªù',
    price: 'Mi·ªÖn ph√≠',
    instructor: 'Ho√†ng VƒÉn E',
    rating: 4.9
  }
];

const FeaturedCourses = () => {
  const [courses, setCourses] = useState([]);

  // Simulate fetching courses from API
  useEffect(() => {
    // In a real app, this would be an API call
    setCourses(mockCourses);
  }, []);

  return (
    <section className="section featured-courses" data-aos="fade-up">
      <div className="container">
        <div className="section-title" data-aos="fade-up">
          <h2>Kh√≥a H·ªçc N·ªïi B·∫≠t</h2>
          <p className="section-description">
            C√°c kh√≥a h·ªçc ƒë∆∞·ª£c thi·∫øt k·∫ø b·ªüi chuy√™n gia v·ªõi n·ªôi dung c·∫≠p nh·∫≠t theo xu h∆∞·ªõng c√¥ng ngh·ªá m·ªõi nh·∫•t
          </p>
        </div>

        <div className="courses-wrapper" data-aos="fade-up" data-aos-delay="200">
          <Swiper
            effect={'coverflow'}
            grabCursor={true}
            centeredSlides={true}
            slidesPerView={'auto'}
            coverflowEffect={{
              rotate: 0,
              stretch: 0,
              depth: 100,
              modifier: 2,
              slideShadows: true,
            }}
            pagination={{
              clickable: true,
            }}
            navigation={true}
            autoplay={{
              delay: 3500,
              disableOnInteraction: false,
            }}
            modules={[EffectCoverflow, Pagination, Navigation, Autoplay]}
            className="mySwiper"
            breakpoints={{
              640: {
                slidesPerView: 1,
                spaceBetween: 20,
              },
              768: {
                slidesPerView: 2,
                spaceBetween: 30,
              },
              1024: {
                slidesPerView: 3,
                spaceBetween: 30,
              },
            }}
          >
            {courses.map((course) => (
              <SwiperSlide key={course.id}>
                <div className="course-card">
                  <div className="course-image-container">
                    <img src={course.image || '/default-course.jpg'} alt={course.title} className="course-image" />
                    <div className="course-level">{course.level}</div>
                    <div className="course-language-badge" style={{ backgroundColor: course.color }}>
                      <span className="language-icon">{course.icon}</span>
                      <span className="language-name">{course.language}</span>
                    </div>
                  </div>
                  <div className="course-content">
                    <div className="course-header">
                      <h3 className="course-title">{course.title}</h3>
                      <p className="course-description">{course.description}</p>
                    </div>
                    
                    <div className="course-details">
                      <div className="course-meta">
                        <div className="meta-item">
                          <span className="meta-icon">‚è±Ô∏è</span>
                          <span>{course.duration}</span>
                        </div>
                        <div className="meta-item">
                          <span className="meta-icon">üë®‚Äçüè´</span>
                          <span>{course.instructor}</span>
                        </div>
                        <div className="meta-item">
                          <span className="meta-icon">‚≠ê</span>
                          <span>{course.rating}/5</span>
                        </div>
                      </div>
                      
                      <div className="course-footer">
                        <div className="course-price">{course.price}</div>
                        <Link to={`/courses/${course.id}`} className="btn-course-details">
                          Xem Chi Ti·∫øt
                        </Link>
                      </div>
                    </div>
                  </div>
                </div>
              </SwiperSlide>
            ))}
          </Swiper>
        </div>
        
        <div className="view-all-courses" data-aos="fade-up" data-aos-delay="400">
          <Link to="/courses" className="btn-view-all">
            Xem T·∫•t C·∫£ Kh√≥a H·ªçc
          </Link>
        </div>
      </div>
    </section>
  );
};

export default FeaturedCourses; 